package echootelmiddleware

import (
	"strings"

	"github.com/labstack/echo/v4"
	"go.opentelemetry.io/otel/attribute"
	"go.opentelemetry.io/otel/trace"
)

func prepareTagValue(str string, size int, removeNewLine bool) string {
	if removeNewLine {
		str = strings.ReplaceAll(str, "\n", " ") // no \n in strings
	}

	if size <= 0 || size >= len(str) {
		return str
	}

	return str[:size-3] + "..."
}

func prepareTagName(str string, size int) string {
	if size <= 0 || size >= len(str) {
		return str
	}

	return str[:size]
}

func getRequestID(ctx echo.Context) string {
	requestID := ctx.Request().Header.Get(echo.HeaderXRequestID) // request-id generated by reverse-proxy
	if requestID == "" {
		// missed request-id from proxy,got generated one by middleware.RequestID()
		requestID = ctx.Response().Header().Get(echo.HeaderXRequestID)
	}

	return requestID
}

func setAttr(span trace.Span, config OtelConfig, tag, value string) {
	if tag == "" || value == "" {
		return
	}

	span.SetAttributes(attribute.String(prepareTagName(tag, config.LimitNameSize),
		prepareTagValue(value, config.LimitValueSize, config.RemoveNewLines)))
}
