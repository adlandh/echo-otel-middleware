package echo_otel_middleware

import (
	"crypto/rand"
	"fmt"
	"strings"

	"github.com/labstack/echo/v4"
	"go.opentelemetry.io/otel/attribute"
	"go.opentelemetry.io/otel/trace"
)

func prepareTagValue(str string, size int, removeNewLine bool) string {
	if removeNewLine {
		str = strings.Replace(str, "\n", " ", -1) // no \n ib strings
	}
	if size <= 0 || size >= len(str) {
		return str
	}

	return str[:size-3] + "..."
}

func prepareTagName(str string, size int) string {
	if size <= 0 || size >= len(str) {
		return str
	}

	return str[:size]
}

func getRequestID(ctx echo.Context) string {
	requestID := ctx.Request().Header.Get(echo.HeaderXRequestID) // request-id generated by reverse-proxy
	if requestID == "" {
		requestID = generateToken() // missed request-id from proxy, we generate it manually
	}
	return requestID
}

func generateToken() string {
	b := make([]byte, 16)
	_, _ = rand.Read(b)
	return fmt.Sprintf("%x", b)
}

func setAttr(span trace.Span, config OtelConfig, tag, value string) {
	if tag == "" || value == "" {
		return
	}

	span.SetAttributes(attribute.String(prepareTagName(tag, config.LimitNameSize),
		prepareTagValue(value, config.LimitValueSize, config.RemoveNewLines)))
}
